name: Java CI and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build and test
        run: mvn -B -e -DskipTests=false clean verify

  publish:
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17 and configure Maven for OSSRH
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      # diagnostics + explicit settings
      - name: Check OSSRH secrets availability
        run: |
          if [ -z "${{ secrets.OSSRH_USERNAME }}" ] || [ -z "${{ secrets.OSSRH_PASSWORD }}" ]; then
            echo "ERROR: OSSRH_USERNAME or OSSRH_PASSWORD is not available to this run."
            exit 1
          else
            echo "OSSRH secrets are present."
          fi
      
      - name: Deploy to OSSRH (release or snapshot)
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -eo pipefail
          VERSION=$(mvn -q -Dexec.cleanupDaemonThreads=false -DforceStdout -Dexpression=project.version help:evaluate | tail -n 1)
          echo "Project version: $VERSION"

          if [[ "$VERSION" == *-SNAPSHOT ]]; then
            echo "Detected SNAPSHOT version; deploying to OSSRH snapshot repository."
            mvn -B -DskipTests clean deploy
          else
            if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
              echo "Detected release tag ${GITHUB_REF}; deploying a release with signing and staging."
              mvn -B -Prelease -DskipTests clean deploy
            else
              echo "Non-SNAPSHOT version on a non-tag ref. Refusing to deploy to prevent accidental release."
              echo "Either:"
              echo " - Update pom.xml version to end with -SNAPSHOT for snapshot deployments from main, or"
              echo " - Push a tag like v1.0.1 to trigger a signed/staged release."
              exit 1
            fi
          fi